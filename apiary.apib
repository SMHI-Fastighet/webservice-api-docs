FORMAT: 1A
HOST: http://fastighetsstyrning.smhi.se/ws/enloss

# SMHI Fastighet

This is the technical documentation of the API provided by SMHI for customers to request e.g. energy statistics
and equivalent temperature forecasts for buildings and properties.

Please visit [SMHI - Fastighet](https://www.smhi.se/professionella-tjanster/professionella-tjanster/fastighet) 
 (*in swedish*) for more information about the products and services we provide.
 
## Documentation Outline
The API endpoint is **http://fastighetsstyrning.smhi.se/ws/enloss** which is the root for all requests.
Real requests are made by providing additional parameters via the URL and authentication info via headers.

## Authentication
As a subscriber to this API you should have received a customer id, subscription id and a password. These three
parts must be formatted in a certain way and put into the header **key** for the request to be considered valid.

Customer id should be an 8 character integer with leading 0s. Subscription id is a simple integer and a customer
can have one or more subscription ids, one for each subscription. Password is a simple string.

The required format of the **key** header is **customer id:subscription id:md5sum** where **md5sum** is the
md5sum of "today's date (YYYY-MM-DD):password".

For a customer with a customer id 00001234, subscription id 1337 and password foobarbaz, the header **key**
should be (on 2018-10-08):
*00001234:1337:md5("2018-10-08:foobarbaz")* -> 
*00001234:1337:26b20a669930b8f49491a03f5e0e3c8c*

## Headers
bla bla

## Places
bla bla

## Products
bla bla

## Historical Requests
bla bla

## Error Handling
bla bla

## Code Examples

### Python

### Java

### C#

## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }