FORMAT: 1A
HOST: https://fastighetsstyrning.smhi.se/ws/v2/enloss

# SMHI Real Estate

**This API is deprecated and has been replaced by https://enlossws.smhi.se. This API is still maintained but new products will not be available here.**

This is the technical documentation of the API provided by SMHI Real Estate for customers to request e.g. energy statistics
and equivalent temperature forecasts for buildings and properties.

Please visit [SMHI - Real Estate](https://www.smhi.se/professionella-tjanster/professionella-tjanster/fastighet) 
 (*in swedish*) for more information about the products and services we provide.
 
## Basic Information
The API endpoint is **https://fastighetsstyrning.smhi.se/ws/v2/enloss** which is the root for all requests.
Real requests are made by providing additional parameters via the URL and authentication info via headers.

Some products cannot be accessed through the **v2** endpoint above because we have not implemented an updated
version for that product yet. For these products, use the endpoint **https://fastighetsstyrning.smhi.se/ws/enloss**
instead.

**It is strongly recommended to use the v2 endpoint whenever possible!**

The full endpoint is **https://fastighetsstyrning.smhi.se/ws/v2/enloss/*\<place\>*/*\<product\>*/*\<typecase\>*/*\<date\>***,
where ***\<place\>*** and ***\<product\>*** are required. ***\<typecase\>*** is only required for some products and 
***\<date\>*** is optional and specifies a date from which data are returned.

All parameters and headers are described in the sections below.

## Authentication
As a subscriber to the API you should have received a customer id, subscription id and a password. These three
parts must be formatted in a certain way and put into the header **key** for the request to be considered valid.

Customer id should be an 8 character integer with leading 0s. Subscription id is an integer and a customer
can have one or more subscription ids, one for each subscription. Password is a string.

The required format of the **key** header is **customer id:subscription id:md5sum** where **md5sum** is the
md5sum of "today's date (YYYY-MM-DD):password".

For a customer with a customer id 00001234, subscription id 1337 and password foobarbaz, the header **key**
should be (on 2018-10-08):

    *00001234:1337:md5("2018-10-08:foobarbaz")*
    
which computes to:

    *00001234:1337:26b20a669930b8f49491a03f5e0e3c8c*

## Headers
Two headers as key-value pairs are required.
|Key|Description|
|---|-----------|
|accept|Specifies which data structure the returned data will be in. Currently only "application/json" is supported and the header can be hard coded to this.|
|key|See the Authentication section|

## Places
Each request to the API is a request for data at a specific place. A place is identified with a 
6 digit number. The first 3 digits is the country identification and the last 3 is a unique number for each
place available. Currently only places in Sweden are available and its country code is 102.
Some products are based on forecasts and they requires the first digit to be 5. In this case the first 3
digits should be 502. The Products section describes which products that are based on forecasts and thus
requires the country code 502, instead of the normal 102.

In the link, [Places and Placenumbers](https://github.com/SMHI-Fastighet/webservice-api-docs/blob/master/ortslista.csv), there is a list of all places and their place numbers.

## Typecases
A typecase is a representation of a specific building and its surroundings which is used in models
by SMHI. A typecase is represented by an id. See the Products section for the products that requires a typecase.

## Products
Data for multiple products are available in the API and they are found in the table below. The Product short
name is used as a parameter in the URL to specify requested product.

As described in the Places section, some products based on forecasts requires the country code in the place
number to be 502 and this can also be seen in the table.

Some products requires a typecase as described in the Typecases section and this information is found in the
table as well.

As described in the Historical Requests section, it is possible to request historical values for some products.
The possible products are found in the tables below.

As described in the Basic Information section, all products are not available in the v2 endpoint and this is
found in the tables.

All the parameters included in each product is explicitly defined in the tables below.

### SMHI Energy-Index and Heating Degree Days Monthly Values
This product requires two requests to the API, one for the Energy-Index and one for the Heating Degree Days.
If the product MonthlyEIGD is requested, all parameters are included and only 1 request is required.

|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|MonthlyEIGD / EIGDmanad|NO|NO|YES|YES|
|MonthlyDD / GDmanad|NO|NO|YES|NO|
|MonthlyEI / EImanad|NO|NO|YES|NO|

#### Included parameters
|Product short name|Parameter name|Description|
|------------------|--------------|-----------|
|MonthlyEIGD|EIakt|Actual Energy-Index in equivalent heating degree days|
|MonthlyEIGD|EInorm|Normal Energy-Index in equivalent heating degree days|
|MonthlyEIGD|EIkorr|Correction factor, i.e. EIakt / EInorm|
|MonthlyEIGD|EIrekkorr|Recommended correction factor, i.e. EIkorr but constrained to be within reasonable limits|
|MonthlyEIGD|GDakt|Actual heating degree days|
|MonthlyEIGD|GDnorm|Normal heating degree days|
|MonthlyEIGD|GDkorr|Correction factor, i.e. GDakt / GDnorm|
|MonthlyEIGD|GDrekkorr|Recommended correction factor, i.e. GDkorr but constrained to be within reasonable limits|
|MonthlyEIGD|TTakt|Actual average temperature|
|MonthlyEIGD|TTnorm|Normal average temperature|
|MonthlyEI|EIakt|Actual Energy-Index in equivalent heating degree days|
|MonthlyEI|EInorm|Normal Energy-Index in equivalent heating degree days|
|MonthlyDD|GDakt|Actual heating degree days|
|MonthlyDD|GDnorm|Normal heating degree days|
|MonthlyDD|TTakt|Actual average temperature|
|MonthlyDD|TTnorm|Normal average temperature|

### SMHI Energy-Index and Heating Degree Days Daily Values
This product requires two requests to the API, one for the Energy-Index and one for the Heating Degree Days.
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|DailyDD / GDdygn|NO|NO|YES|NO|
|DailyEI / EIdygn|NO|NO|YES|NO|

#### Included parameters
|Product short name|Parameter name|Description|
|------------------|--------------|-----------|
|DailyEI|EIakt|Actual Energy-Index in equivalent heating degree days|
|DailyEI|EInorm|Normal Energy-Index in equivalent heating degree days|
|DailyDD|GDakt|Actual heating degree days|
|DailyDD|GDnorm|Normal heating degree days|
|DailyDD|TTakt|Actual average temperature|
|DailyDD|TTnorm|Normal average temperature|

### SMHI Cooling-Index Monthly Values
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|MonthlyKI / KImanad|NO|YES|YES|YES|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|KIakt|Actual Cooling-Index in Wh/m²
|KInorm|Normal Cooling-Index in Wh/m²
|KIkorr|Correction factor, i.e. KIakt / KInorm
|KIrekkorr|Recommended correction factor, i.e. KIkorr but constrained to be within reasonable limits
|TTakt|Actual average temperature
|TTnorm|Normal average temperature

### SMHI Cooling-Index Daily Values
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|DailyKI / KIdygn|NO|YES|YES|YES|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|KIakt|Actual Cooling-Index in Wh/m²
|KInorm|Normal Cooling-Index in Wh/m²
|TTakt|Actual average temperature
|TTnorm|Normal average temperature

### SMHI Cooling-Index Hourly Values
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|HourlyKI / KItimme|NO|YES|NO|YES|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|KIakt|Actual Cooling-Index in W/m²
|TTakt|Actual temperature

### Mean Temperature Daily Values
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|DailyTT / TTdygn|NO|NO|YES|NO|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|TTakt|Actual average temperature

### Temperature Hourly Values
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|HourlyTT / TTtimme|NO|NO|NO|NO|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|TTakt|Actual temperature

### SMHI Equivalent Temperature Hourly Values
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|ETObs|NO|YES|NO|NO|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|ETobs|Equivalent temperature
|outdoorTemp|Actual temperature

### SMHI Equivalent Temperature Forecast
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|ETProg|YES|YES|NO|NO|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|ETprog|Equivalent temperature
|outdoorTemp|Actual temperature
|windDirection|Wind direction in degrees. Wind from north -> 0/360 degrees. Wind from east -> 90 degrees.
|windSpeed|Wind speed at 10m in m/s.
|cloudiness|Total cloudiness in octas. 0 -> no clouds. 8 -> overcast.
|globalRadiation|Global irradiance on a horizontal plane in W/m²

### SMHI Equivalent Temperature Forecast Control
|Product short name|Requires country code 502|Requires typecase|Has historical values|In v2|
|------------------|-------------------------|-----------------|---------------------|-----|
|ETFast|YES|YES|NO|NO|

#### Included parameters
|Parameter name|Description|
|--------------|-----------|
|ETprog|Equivalent temperature
|outdoorTemp|Actual temperature

### Available Typecases
The table below specifies which typecases that are available for the products that requires a typecase.
|Product short name|Available typecases|
|------------------|-------------------|
|MonthlyKI / KImanad|1016, 1017, 1018, 1019, 1020|
|DailyKI / KIdygn|1016, 1017, 1018, 1019, 1020|
|HourlyKI / KItimme|1016, 1017, 1018, 1019, 1020|
|ETObs|105|
|ETProg|105|
|ETFast|*|

\* *This product has too many available typecases to show in a table. Contact SMHI Real Estate for a complete
list and for more information.*

## Historical Requests
Using the API without the \<date\> parameter will always get the latest valid values returned.
It is possible to get historical values by specifying a date from which values will be returned.
Note that historical requests may be slower than normal requests.

Historical requests are made by specifying the \<date\> parameter on the form YYYYmmddTHHMMSSZ and values
will be returned from that date to the latest valid date. E.g. the date 2018-02-15 12:00:00 translates to the
format 20180215T120000Z.

The date from which a customer is allowed to get data from is regulated by the subscription and there may
also be a limit to how many times historical requests can be made.

## Test environment
SMHI has a test environment for the API that is publically available at **https://enlossws-tst.smhi.se/ws/v2/enloss**.
Contact us if you have a test environment that you wish to connect to our test environment at mailto:fastighet@smhi.se.

## Returned Body
Data is returned in json format with both metadata and the values for the product. A response has the format
```
{
    "placeName": <place name: string>,
    "projection": <projection: string,
    "lon": <place longitude: floating point>,
    "lat": <place latitude: floating point>,
    "placeId": <place number: integer>,
    "timezone": <timezone: string>,
    "dataDescription": [
        <array with data column headers: strings>
    ],
    "issuedate": <describes when data was created: string>,
    "issuer": <issuer of the data: string>,
    "data": [
        [
            <arrays with data with as many columns as fields in dataDescription: _>
        ]
    ],
    "product": <requested product: string>
}
```

The two most important json attributes are <code>dataDescription</code> and <code>data</code>.
It is important that <code>dataDescription</code> is evaluated **every 
request** to get the order of the data since it is not guaranteed that the parameters in the
<code>data</code> attribute will always come in the same order.

The examples below further demonstrates how the returned json format looks like.

## Error Handling
The API attempts to return appropriate status codes for every request.
A 2xx status code indicates success, whereas a 4xx or 5xx status code indicates an error.

Currently these status codes can be returned
|Status Code|Name|Description|
|-----------|----|-----------|
|200|Success|The request was successful and data is returned.|
|204|No Content|The request was successful but no content was found. This can be due to an invalid combination of the request parameters.|
|401|Unauthorized|Authentication was refused and a customer and subscription with the specified key could not be found. Check that the key header really is correct.|
|403|Forbidden|Authentication was successful but the customer does not have access to the requested data.|
|404|Not Found|URL not found|
|500|Internal Server Error|Something in the request could not be processed. Check the raised exception for details.|


## Code Examples
Minimal code examples that are automatically generated by Apiary is found by clicking on the different 
examples below. Expand the combobox under Request initially holding 'Raw' to select programming language.

## Basic Requests [/{place}/{product}]
This is the most basic requests that gets the latest data set for products that do not require a typecase.

### Place and Product [GET]
+ Parameters

    + place: 102612 (required, integer) - The id of the place to get data for
    + product: MonthlyEI (required, string) - The short name of the product to get data for
    

+ Request

    + Headers
    
            accept: application/json
            key: customerid:subscriptionid:md5sum
            
+ Response 200 (application/json)

        {
            "placeName": "Stockholm",
            "projection": "WGS84",
            "lon": 18.0400009,
            "lat": 59.2830009,
            "placeId": 102612,
            "timezone": "Europe/Stockholm",
            "dataDescription": [
                "validDate",
                "EIakt",
                "EInorm"
            ],
            "issuedate": "2018-09-01 02:00:00",
            "issuer": "SMHI",
            "data": [
                [
                    "2018-09-01",
                    -999,
                    -999
                ]
            ],
            "product": "EImanad"
        }
        
## Products with Typecase [/{place}/{product}/{typecase}]
This is a request with products that requires a typecase.

### Place, Product and Typecase[GET]
+ Parameters

    + place: 102612 (required, integer) - The id of the place to get data for
    + product: DailyEI (required, string) - The short name of the product to get data for
    + typecase: 105 (optional, integer) - The id of the typecase to get data for
    

+ Request

    + Headers
    
            accept: application/json
            key: customerid:subscriptionid:md5sum
            
+ Response 200 (application/json)

        {
            "placeName": "Stockholm",
            "projection": "WGS84",
            "lon": 18.0400009,
            "lat": 59.2830009,
            "placeId": 102612,
            "timezone": "Europe/Stockholm",
            "dataDescription": [
                "validDate",
                "EIakt",
                "EInorm"
            ],
            "issuedate": "2018-10-10 02:00:00",
            "issuer": "SMHI",
            "data": [
                [
                    "2018-10-03",
                    -999,
                    -999
                ],
                [
                    "2018-10-04",
                    -999,
                    -999
                ],
                [
                    "2018-10-05",
                    -999,
                    -999
                ],
                [
                    "2018-10-06",
                    -999,
                    -999
                ],
                [
                    "2018-10-07",
                    -999,
                    -999
                ],
                [
                    "2018-10-08",
                    -999,
                    -999
                ],
                [
                    "2018-10-09",
                    -999,
                    -999
                ]
            ],
            "product": "EIdygn"
        }
        
# Historical Requests [/{place}/{product}/{typecase}/{date}]
This is requests for historical data. The <code>typecase</code> parameter can be omitted if the requested product does
not require a typecase.

### Place, Product, (Typecase) and Date[GET]
+ Parameters

    + place: 102612 (required, integer) - The id of the place to get data for
    + product: DailyEI (required, string) - The short name of the product to get data for
    + typecase: 105 (optional, integer) - The id of the typecase to get data for
    + date: 20181001T000000Z (optional, string) - The date to get data from
    

+ Request

    + Headers
    
            accept: application/json
            key: customerid:subscriptionid:md5sum
            
+ Response 200 (application/json)

        {
            "placeName": "Stockholm",
            "projection": "WGS84",
            "lon": 18.0400009,
            "lat": 59.2830009,
            "placeId": 102612,
            "timezone": "Europe/Stockholm",
            "dataDescription": [
                "validDate",
                "EIakt",
                "EInorm"
            ],
            "issuedate": "2018-10-10 02:00:00",
            "issuer": "SMHI",
            "data": [
                [
                    "2018-10-01",
                    -999,
                    -999
                ],
                [
                    "2018-10-02",
                    -999,
                    -999
                ],
                [
                    "2018-10-03",
                    -999,
                    -999
                ],
                [
                    "2018-10-04",
                    -999,
                    -999
                ],
                [
                    "2018-10-05",
                    -999,
                    -999
                ],
                [
                    "2018-10-06",
                    -999,
                    -999
                ],
                [
                    "2018-10-07",
                    -999,
                    -999
                ],
                [
                    "2018-10-08",
                    -999,
                    -999
                ],
                [
                    "2018-10-09",
                    -999,
                    -999
                ]
            ],
            "product": "EIdygn"
        }