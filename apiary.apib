FORMAT: 1A
HOST: http://fastighetsstyrning.smhi.se/ws/enloss

# SMHI Fastighet

This is the technical documentation of the API provided by SMHI for customers to request e.g. energy statistics
and equivalent temperature forecasts for buildings and properties.

Please visit [SMHI - Fastighet](https://www.smhi.se/professionella-tjanster/professionella-tjanster/fastighet) 
 (*in swedish*) for more information about the products and services we provide.
 
## Basic Information
The API endpoint is **http://fastighetsstyrning.smhi.se/ws/enloss** which is the root for all requests.
Real requests are made by providing additional parameters via the URL and authentication info via headers.

The full endpoint is **http://fastighetsstyrning.smhi.se/ws/enloss/*\<place\>*/*\<product\>*/*\<typecase\>*/*\<date\>***,
where ***\<place\>*** and ***\<product\>*** are required. ***\<typecase\>*** is only required for some products and 
***\<date\>*** is optional and specifies a date from which data are returned.

All parameters and headers are described in the sections below.

## Authentication
As a subscriber to the API you should have received a customer id, subscription id and a password. These three
parts must be formatted in a certain way and put into the header **key** for the request to be considered valid.

Customer id should be an 8 character integer with leading 0s. Subscription id is an integer and a customer
can have one or more subscription ids, one for each subscription. Password is a string.

The required format of the **key** header is **customer id:subscription id:md5sum** where **md5sum** is the
md5sum of "today's date (YYYY-MM-DD):password".

For a customer with a customer id 00001234, subscription id 1337 and password foobarbaz, the header **key**
should be (on 2018-10-08):

    *00001234:1337:md5("2018-10-08:foobarbaz")*
    
which computes to:

    *00001234:1337:26b20a669930b8f49491a03f5e0e3c8c*

## Headers
Two headers as key-value pairs are required.
|Key|Description|
|---|-----------|
|accept|Specifies which data structure the returned data will be in. Currently only "application/json" is supported and the header can be hard coded to this.|
|key|See the Authentication section|

## Places
Each request to the API is a request for data at a specific place. A place is identified with a 
6 digit number. The first 3 digits is the country identification and the last 3 is a unique number for each
place available. Currently only places in Sweden are available meaning that the first 3 digits should be 102.
Some products are based on forecasts and they requires the first digit to be 5. In this case the first 3
digits should be 502. The Products section describes which products that are based on forecasts and thus
requires the country code 502, instead of the normal 102.

For a complete list of the available places, see **HÃ„R SAKNAS EN LISTA MED MAPPNING MOT PLACENUMBER**.

## Typecases
A typecase is a representation of a specific building and its surroundings which is used in models
by SMHI to calculate some products. A typecase is represented by an id which is an integer. See the Products
section for the products that requires a typecase.

## Products
Data for multiple products are available in the API and they are found in the table below. The Product short
name is used as a parameter in the URL to specify requested product.

As described in the Places section, some products based on forecasts requires the country code in the place
number to be 502 and this can also be seen in the table.

Some products requires a typecase as described in the Typecases section and this information is found in the
table as well.

|Product|Product short name|Requires country code 502|Requires typecase|
|-------|------------------|-------------------------|-----------------|
|Graddagar Monthly|MonthlyDD / GDmanad|NO|NO|
|Graddagar Daily|DailyDD / GDdygn|NO|YES|
|Energiindex Monthly|MonthlyEI / EImanad|NO|NO|
|Energiindex Daily|DailyEI / EIdygn|NO|YES|
|Kylindex Monthly|MonthlyKI / KImanad|NO|YES|
|Kylindex Daily|DailyKI / KIdygn|NO|YES|
|Kylindex Hourly|HourlyKI / KItimme|NO|YES|
|Ekvivalenttemperatur Daily|DailyET / ETdygn|NO|NO|
|Ekvivalenttemperatur for Forecast Control|ETFast|YES|YES|
|Ekvivalenttemperatur Forecasts|ETProg|YES|YES|
|Ekvivalenttemperatur Observations|ETObs|NO|YES|

The table below specifies which typecases that are available for the products that requires a typecase.
|Product short name|Available typecases|
|------------------|-------------------|
|DailyDD / GDdygn|105|
|DailyEI / EIdygn|105|
|MonthlyKI / KImanad|1011, 1012, 1013, 1014|
|DailyKI / KIdygn|1011, 1012, 1013, 1014|
|HourlyKI / KItimme|1011, 1012, 1013, 1014|
|ETFast|*|
|ETProg|105|
|ETObs|105|

\* *This product has too many available typecases to show in a table. Contact SMHI Fastighet for a complete
list and for more information.*

## Historical Requests
Normally requests shall be made without the \<date\> parameter and this will return the latest valid values,
e.g. data for the latest month depending on the specified product. New customers may need to populate internal
databases with history and this can be made with historical requests.

Historical requests are made by specifying the \<date\> parameter on the form YYYY-MM-DDTHHmmSSZ and values
will be returned from that date to the latest valid date. E.g. the date

The date from which a customer is allowed to get data from is regulated by the subscription and there may
also be a limit to how many times historical requests can be made.

## Error Handling
The API attempts to return appropriate HTTP status codes for every request.
A 2xx status code indicates success, whereas a 4xx or 5xx status code indicates an error.

Currently these status codes can be returned
|Status Code|Name|Description|
|-----------|----|-----------|
|200|Success|The request was successful and data is returned.|
|204|No Content|The request was successful but no content was found. This can be due to an invalid combination of the request parameters.|
|401|Unauthorized|Authentication was refused and a customer and subscription with the specified key could not be found. Check that the key header really is correct.|
|403|Forbidden|Authentication was successful but the customer does not have access to the requested data.|
|404|Not Found|URL not found|
|500|Internal Server Error|Something in the request could not be processed. Check the raised exception for details.|


## Code Examples
Below are some basic code examples that demonstrates minimal examples to get data from the API.

### Python
```
from __future__ import print_function

def get_smhi_data(customerid, subscriptionid, password, place, product, typecase=None, date=None):
    """Minimal python function to get data from the API."""
    import requests
    import hashlib
    import time
    
    # Create the headers
    today = time.strftime("%Y-%m-%d")
    md5 = hashlib.md5()
    md5.update("{0}:{1}".format(today, password))
    key = "{0}:{1}:{2}".format(customerid, subscriptionid, md5.hexdigest())
    
    accept = "application/json"
    
    headers = {"key": key, "accept": accept}
    
    # Create the URL
    url = "http://fastighetsstyrning.smhi.se/ws/enloss/{0}/{1}".format(place, product)
    
    if typecase is not None:
        url = "/".join([url, typecase])
    
    if date is not None:
        url = "/".join([url, date])
        
    # Perform request to API
    response = requests.get(url, headers=headers)
    
    if response.status_code != 200:
        # Not successful or no content
        print(response.json())
        return None
        
    else:
        return response.json()
```

### Java
```
package enlosswsexample;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.xml.bind.DatatypeConverter;
import org.json.JSONObject;

public class JavaExample {
    
    public static JSONObject get_smhi_data(
            String customerId, String subscriptionId, String password,
            String place, String product, String typeCase, String date)
            throws NoSuchAlgorithmException, MalformedURLException, IOException {
        
        // Create the headers
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String today = dateFormat.format(new Date());
        MessageDigest md5 = MessageDigest.getInstance("MD5");
        md5.update((today + ":" + password).getBytes());
        String key = customerId + ":" + subscriptionId + ":" + 
                DatatypeConverter.printHexBinary(md5.digest()).toLowerCase();
        
        String accept = "application/json";
        
        // Create the URL
        String surl = "http://fastighetsstyrning.smhi.se/ws/enloss/" + place + "/" + product;
        
        if (typeCase != null) {
            surl += "/" + typeCase;
        }
        
        if (date != null) {
            surl += "/" + date; 
        }
        
        URL url = new URL(surl);
        
        // Perform request to API
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestProperty("accept", accept);
        conn.setRequestProperty("key", key);
        conn.setRequestMethod("GET");
        
        if (conn.getResponseCode() != 200) {
            System.err.println(conn.getErrorStream());
            return null;
        }
        else {
            String inputLine;
            StringBuilder body = new StringBuilder();
            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            
            while ((inputLine = in.readLine()) != null) {
                body.append(inputLine);
            }
            
            JSONObject json = new JSONObject(body.toString());
            return json;
        }
    }
}
```WIP: 

## Basic Requests [/place/product]

### Place and Product [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]